/*
 * Process Services Enterprise API
 * Provides access to the complete features provided by Alfresco Process Services powered by Activiti.  You can use this API to integrate Alfresco Process Services with external applications.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.activiti.engine.remote.client.api;

import org.activiti.engine.remote.client.ApiException;
import org.activiti.engine.remote.client.model.RestVariable;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProcessInstanceVariablesApi
 */
@Ignore
public class ProcessInstanceVariablesApiTest {

    private final ProcessInstanceVariablesApi api = new ProcessInstanceVariablesApi();

    
    /**
     * Create or update variables
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOrUpdateProcessInstanceVariablesUsingPUTTest() throws ApiException {
        String processInstanceId = null;
        List<RestVariable> restVariables = null;
        List<RestVariable> response = api.createOrUpdateProcessInstanceVariablesUsingPUT(processInstanceId, restVariables);

        // TODO: test validations
    }
    
    /**
     * Create variables
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createProcessInstanceVariablesUsingPOSTTest() throws ApiException {
        String processInstanceId = null;
        List<RestVariable> restVariables = null;
        List<RestVariable> response = api.createProcessInstanceVariablesUsingPOST(processInstanceId, restVariables);

        // TODO: test validations
    }
    
    /**
     * Delete a variable
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteProcessInstanceVariableUsingDELETETest() throws ApiException {
        String processInstanceId = null;
        String variableName = null;
        api.deleteProcessInstanceVariableUsingDELETE(processInstanceId, variableName);

        // TODO: test validations
    }
    
    /**
     * Get a variable
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProcessInstanceVariableUsingGETTest() throws ApiException {
        String processInstanceId = null;
        String variableName = null;
        RestVariable response = api.getProcessInstanceVariableUsingGET(processInstanceId, variableName);

        // TODO: test validations
    }
    
    /**
     * List variables
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProcessInstanceVariablesUsingGETTest() throws ApiException {
        String processInstanceId = null;
        List<RestVariable> response = api.getProcessInstanceVariablesUsingGET(processInstanceId);

        // TODO: test validations
    }
    
    /**
     * Update a variable
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateProcessInstanceVariableUsingPUTTest() throws ApiException {
        String processInstanceId = null;
        String variableName = null;
        RestVariable restVariable = null;
        RestVariable response = api.updateProcessInstanceVariableUsingPUT(processInstanceId, variableName, restVariable);

        // TODO: test validations
    }
    
}
