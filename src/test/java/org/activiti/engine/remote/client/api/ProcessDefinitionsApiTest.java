/*
 * Process Services Enterprise API
 * Provides access to the complete features provided by Alfresco Process Services powered by Activiti.  You can use this API to integrate Alfresco Process Services with external applications.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.activiti.engine.remote.client.api;

import org.activiti.engine.remote.client.ApiException;
import org.activiti.engine.remote.client.model.FormDefinitionRepresentation;
import org.activiti.engine.remote.client.model.FormValueRepresentation;
import org.activiti.engine.remote.client.model.IdentityLinkRepresentation;
import org.activiti.engine.remote.client.model.ResultListDataRepresentationProcessDefinitionRepresentation;
import org.activiti.engine.remote.client.model.ResultListDataRepresentationRuntimeDecisionTableRepresentation;
import org.activiti.engine.remote.client.model.ResultListDataRepresentationRuntimeFormRepresentation;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProcessDefinitionsApi
 */
@Ignore
public class ProcessDefinitionsApiTest {

    private final ProcessDefinitionsApi api = new ProcessDefinitionsApi();

    
    /**
     * Add a user or group involvement to a process definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createIdentityLinkUsingPOSTTest() throws ApiException {
        String processDefinitionId = null;
        IdentityLinkRepresentation identityLinkRepresentation = null;
        IdentityLinkRepresentation response = api.createIdentityLinkUsingPOST(processDefinitionId, identityLinkRepresentation);

        // TODO: test validations
    }
    
    /**
     * Remove a user or group involvement from a process definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIdentityLinkUsingDELETETest() throws ApiException {
        String processDefinitionId = null;
        String family = null;
        String identityId = null;
        api.deleteIdentityLinkUsingDELETE(processDefinitionId, family, identityId);

        // TODO: test validations
    }
    
    /**
     * Get a user or group involvement with a process definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIdentityLinkTypeUsingGETTest() throws ApiException {
        String processDefinitionId = null;
        String family = null;
        String identityId = null;
        IdentityLinkRepresentation response = api.getIdentityLinkTypeUsingGET(processDefinitionId, family, identityId);

        // TODO: test validations
    }
    
    /**
     * List either the users or groups involved with a process definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIdentityLinksForFamilyUsingGETTest() throws ApiException {
        String processDefinitionId = null;
        String family = null;
        List<IdentityLinkRepresentation> response = api.getIdentityLinksForFamilyUsingGET(processDefinitionId, family);

        // TODO: test validations
    }
    
    /**
     * List the users and groups involved with a process definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIdentityLinksUsingGETTest() throws ApiException {
        String processDefinitionId = null;
        List<IdentityLinkRepresentation> response = api.getIdentityLinksUsingGET(processDefinitionId);

        // TODO: test validations
    }
    
    /**
     * List the decision tables associated with a process definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProcessDefinitionDecisionTablesUsingGETTest() throws ApiException {
        String processDefinitionId = null;
        ResultListDataRepresentationRuntimeDecisionTableRepresentation response = api.getProcessDefinitionDecisionTablesUsingGET(processDefinitionId);

        // TODO: test validations
    }
    
    /**
     * List the forms associated with a process definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProcessDefinitionFormsUsingGETTest() throws ApiException {
        String processDefinitionId = null;
        ResultListDataRepresentationRuntimeFormRepresentation response = api.getProcessDefinitionFormsUsingGET(processDefinitionId);

        // TODO: test validations
    }
    
    /**
     * Retrieve the start form for a process definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProcessDefinitionStartFormUsingGETTest() throws ApiException {
        FormDefinitionRepresentation response = api.getProcessDefinitionStartFormUsingGET();

        // TODO: test validations
    }
    
    /**
     * Retrieve a list of process definitions
     *
     * Get a list of process definitions (visible within the tenant of the user)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProcessDefinitionsUsingGETTest() throws ApiException {
        Boolean latest = null;
        Long appDefinitionId = null;
        String deploymentId = null;
        ResultListDataRepresentationProcessDefinitionRepresentation response = api.getProcessDefinitionsUsingGET(latest, appDefinitionId, deploymentId);

        // TODO: test validations
    }
    
    /**
     * Retrieve field values (eg. the typeahead field)
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRestFieldValuesUsingGETTest() throws ApiException {
        List<FormValueRepresentation> response = api.getRestFieldValuesUsingGET();

        // TODO: test validations
    }
    
    /**
     * Retrieve field values (eg. the table field)
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRestTableFieldValuesUsingGETTest() throws ApiException {
        List<FormValueRepresentation> response = api.getRestTableFieldValuesUsingGET();

        // TODO: test validations
    }
    
}
