/*
 * Process Services Enterprise API
 * Provides access to the complete features provided by Alfresco Process Services powered by Activiti.  You can use this API to integrate Alfresco Process Services with external applications.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.activiti.engine.remote.client.api;

import org.activiti.engine.remote.client.ApiException;
import org.activiti.engine.remote.client.model.ChangePasswordRepresentation;
import java.io.File;
import org.activiti.engine.remote.client.model.ImageUploadRepresentation;
import org.activiti.engine.remote.client.model.UserRepresentation;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserProfileApi
 */
@Ignore
public class UserProfileApiTest {

    private final UserProfileApi api = new UserProfileApi();

    
    /**
     * Change user password
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changePasswordUsingPOSTTest() throws ApiException {
        ChangePasswordRepresentation changePasswordRepresentation = null;
        api.changePasswordUsingPOST(changePasswordRepresentation);

        // TODO: test validations
    }
    
    /**
     * Retrieve user profile picture
     *
     * Generally returns an image file
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProfilePictureUsingGETTest() throws ApiException {
        File response = api.getProfilePictureUsingGET();

        // TODO: test validations
    }
    
    /**
     * Get user profile
     *
     * This operation returns account information for the current user. This is useful to get the name, email, the groups that the user is part of, the user picture, etc.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProfileUsingGETTest() throws ApiException {
        UserRepresentation response = api.getProfileUsingGET();

        // TODO: test validations
    }
    
    /**
     * Update user profile
     *
     * Only a first name, last name, email and company can be updated
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateProfileTest() throws ApiException {
        UserRepresentation userRepresentation = null;
        UserRepresentation response = api.updateProfile(userRepresentation);

        // TODO: test validations
    }
    
    /**
     * Change user profile picture
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadProfilePictureUsingPOSTTest() throws ApiException {
        File file = null;
        ImageUploadRepresentation response = api.uploadProfilePictureUsingPOST(file);

        // TODO: test validations
    }
    
}
