/*
 * Process Services Enterprise API
 * Provides access to the complete features provided by Alfresco Process Services powered by Activiti.  You can use this API to integrate Alfresco Process Services with external applications.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.activiti.engine.remote.client.api;

import org.activiti.engine.remote.client.ApiException;
import org.activiti.engine.remote.client.model.AppDefinitionPublishRepresentation;
import org.activiti.engine.remote.client.model.AppDefinitionRepresentation;
import org.activiti.engine.remote.client.model.AppDefinitionSaveRepresentation;
import org.activiti.engine.remote.client.model.AppDefinitionUpdateResultRepresentation;
import java.io.File;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppDefinitionsApi
 */
@Ignore
public class AppDefinitionsApiTest {

    private final AppDefinitionsApi api = new AppDefinitionsApi();

    
    /**
     * deleteAppDefinition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppDefinitionUsingDELETETest() throws ApiException {
        Long appDefinitionId = null;
        api.deleteAppDefinitionUsingDELETE(appDefinitionId);

        // TODO: test validations
    }
    
    /**
     * Export an app definition
     *
     * This will return a zip file containing the app definition model and all related models (process definitions and forms).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportAppDefinitionUsingGETTest() throws ApiException {
        Long modelId = null;
        api.exportAppDefinitionUsingGET(modelId);

        // TODO: test validations
    }
    
    /**
     * Get an app definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppDefinitionUsingGETTest() throws ApiException {
        Long modelId = null;
        AppDefinitionRepresentation response = api.getAppDefinitionUsingGET(modelId);

        // TODO: test validations
    }
    
    /**
     * importAndPublishApp
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void importAndPublishAppUsingPOSTTest() throws ApiException {
        File file = null;
        AppDefinitionUpdateResultRepresentation response = api.importAndPublishAppUsingPOST(file);

        // TODO: test validations
    }
    
    /**
     * importAndPublishApp
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void importAndPublishAppUsingPOST1Test() throws ApiException {
        Long modelId = null;
        File file = null;
        AppDefinitionUpdateResultRepresentation response = api.importAndPublishAppUsingPOST1(modelId, file);

        // TODO: test validations
    }
    
    /**
     * Import a new app definition
     *
     * Allows a zip file to be uploaded containing an app definition and any number of included models.&lt;p&gt;This is useful to bootstrap an environment (for users or continuous integration).&lt;p&gt;Before using any processes included in the import the app must be published and deployed.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void importAppDefinitionUsingPOSTTest() throws ApiException {
        File file = null;
        String renewIdmEntries = null;
        AppDefinitionRepresentation response = api.importAppDefinitionUsingPOST(file, renewIdmEntries);

        // TODO: test validations
    }
    
    /**
     * Update the content of an existing app
     *
     * Imports an app inside an existing app definition and creates a new version&lt;p&gt;Before using any new or updated processes included in the import the app must be (re-)published and deployed.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void importAppDefinitionUsingPOST1Test() throws ApiException {
        Long modelId = null;
        File file = null;
        AppDefinitionRepresentation response = api.importAppDefinitionUsingPOST1(modelId, file);

        // TODO: test validations
    }
    
    /**
     * Publish an app definition
     *
     * Publishing an app definition makes it available for use. The application must not have any validation errors or an error will be returned.&lt;p&gt;Before an app definition can be used by other users, it must also be deployed for their use
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void publishAppDefinitionUsingPOSTTest() throws ApiException {
        Long modelId = null;
        AppDefinitionPublishRepresentation publishModel = null;
        AppDefinitionUpdateResultRepresentation response = api.publishAppDefinitionUsingPOST(modelId, publishModel);

        // TODO: test validations
    }
    
    /**
     * Update an app definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAppDefinitionUsingPUTTest() throws ApiException {
        Long modelId = null;
        AppDefinitionSaveRepresentation updatedModel = null;
        AppDefinitionUpdateResultRepresentation response = api.updateAppDefinitionUsingPUT(modelId, updatedModel);

        // TODO: test validations
    }
    
}
