/*
 * Process Services Enterprise API
 * Provides access to the complete features provided by Alfresco Process Services powered by Activiti.  You can use this API to integrate Alfresco Process Services with external applications.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.activiti.engine.remote.client.api;

import org.activiti.engine.remote.client.ApiException;
import org.activiti.engine.remote.client.model.ResultListDataRepresentationSubmittedFormRepresentation;
import org.activiti.engine.remote.client.model.SubmittedFormRepresentation;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SubmittedFormsApi
 */
@Ignore
public class SubmittedFormsApiTest {

    private final SubmittedFormsApi api = new SubmittedFormsApi();

    
    /**
     * List submissions for a form
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFormSubmittedFromsUsingGETTest() throws ApiException {
        Long formId = null;
        Long submittedBy = null;
        Integer start = null;
        Integer size = null;
        ResultListDataRepresentationSubmittedFormRepresentation response = api.getFormSubmittedFromsUsingGET(formId, submittedBy, start, size);

        // TODO: test validations
    }
    
    /**
     * List submissions for a process instance
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProcessSubmittedFromsUsingGETTest() throws ApiException {
        String processId = null;
        ResultListDataRepresentationSubmittedFormRepresentation response = api.getProcessSubmittedFromsUsingGET(processId);

        // TODO: test validations
    }
    
    /**
     * Get a form submission
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSubmittedFromUsingGETTest() throws ApiException {
        Long submittedFormId = null;
        SubmittedFormRepresentation response = api.getSubmittedFromUsingGET(submittedFormId);

        // TODO: test validations
    }
    
    /**
     * Get the submitted form for a task
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTaskSubmittedFromsUsingGETTest() throws ApiException {
        String taskId = null;
        SubmittedFormRepresentation response = api.getTaskSubmittedFromsUsingGET(taskId);

        // TODO: test validations
    }
    
}
