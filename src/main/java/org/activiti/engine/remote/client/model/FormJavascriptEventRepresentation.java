/*
 * Process Services Enterprise API
 * Provides access to the complete features provided by Alfresco Process Services powered by Activiti.  You can use this API to integrate Alfresco Process Services with external applications.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.activiti.engine.remote.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * FormJavascriptEventRepresentation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-26T11:35:07.343+01:00")
public class FormJavascriptEventRepresentation {
  @SerializedName("event")
  private String event = null;

  @SerializedName("javascriptLogic")
  private String javascriptLogic = null;

  public FormJavascriptEventRepresentation event(String event) {
    this.event = event;
    return this;
  }

   /**
   * Get event
   * @return event
  **/
  @ApiModelProperty(value = "")
  public String getEvent() {
    return event;
  }

  public void setEvent(String event) {
    this.event = event;
  }

  public FormJavascriptEventRepresentation javascriptLogic(String javascriptLogic) {
    this.javascriptLogic = javascriptLogic;
    return this;
  }

   /**
   * Get javascriptLogic
   * @return javascriptLogic
  **/
  @ApiModelProperty(value = "")
  public String getJavascriptLogic() {
    return javascriptLogic;
  }

  public void setJavascriptLogic(String javascriptLogic) {
    this.javascriptLogic = javascriptLogic;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FormJavascriptEventRepresentation formJavascriptEventRepresentation = (FormJavascriptEventRepresentation) o;
    return Objects.equals(this.event, formJavascriptEventRepresentation.event) &&
        Objects.equals(this.javascriptLogic, formJavascriptEventRepresentation.javascriptLogic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(event, javascriptLogic);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FormJavascriptEventRepresentation {\n");
    
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    javascriptLogic: ").append(toIndentedString(javascriptLogic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

