/*
 * Process Services Enterprise API
 * Provides access to the complete features provided by Alfresco Process Services powered by Activiti.  You can use this API to integrate Alfresco Process Services with external applications.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.activiti.engine.remote.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * TenantRepresentation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-26T11:35:07.343+01:00")
public class TenantRepresentation {
  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("domain")
  private String domain = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("lastUpdate")
  private OffsetDateTime lastUpdate = null;

  @SerializedName("logoId")
  private Long logoId = null;

  @SerializedName("maxUsers")
  private Integer maxUsers = null;

  @SerializedName("name")
  private String name = null;

  public TenantRepresentation active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public TenantRepresentation created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public TenantRepresentation domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @ApiModelProperty(value = "")
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }

  public TenantRepresentation id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public TenantRepresentation lastUpdate(OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
    return this;
  }

   /**
   * Get lastUpdate
   * @return lastUpdate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastUpdate() {
    return lastUpdate;
  }

  public void setLastUpdate(OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
  }

  public TenantRepresentation logoId(Long logoId) {
    this.logoId = logoId;
    return this;
  }

   /**
   * Get logoId
   * @return logoId
  **/
  @ApiModelProperty(value = "")
  public Long getLogoId() {
    return logoId;
  }

  public void setLogoId(Long logoId) {
    this.logoId = logoId;
  }

  public TenantRepresentation maxUsers(Integer maxUsers) {
    this.maxUsers = maxUsers;
    return this;
  }

   /**
   * Get maxUsers
   * @return maxUsers
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxUsers() {
    return maxUsers;
  }

  public void setMaxUsers(Integer maxUsers) {
    this.maxUsers = maxUsers;
  }

  public TenantRepresentation name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TenantRepresentation tenantRepresentation = (TenantRepresentation) o;
    return Objects.equals(this.active, tenantRepresentation.active) &&
        Objects.equals(this.created, tenantRepresentation.created) &&
        Objects.equals(this.domain, tenantRepresentation.domain) &&
        Objects.equals(this.id, tenantRepresentation.id) &&
        Objects.equals(this.lastUpdate, tenantRepresentation.lastUpdate) &&
        Objects.equals(this.logoId, tenantRepresentation.logoId) &&
        Objects.equals(this.maxUsers, tenantRepresentation.maxUsers) &&
        Objects.equals(this.name, tenantRepresentation.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, created, domain, id, lastUpdate, logoId, maxUsers, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TenantRepresentation {\n");
    
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastUpdate: ").append(toIndentedString(lastUpdate)).append("\n");
    sb.append("    logoId: ").append(toIndentedString(logoId)).append("\n");
    sb.append("    maxUsers: ").append(toIndentedString(maxUsers)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

