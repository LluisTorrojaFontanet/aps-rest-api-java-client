/*
 * Process Services Enterprise API
 * Provides access to the complete features provided by Alfresco Process Services powered by Activiti.  You can use this API to integrate Alfresco Process Services with external applications.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.activiti.engine.remote.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.activiti.engine.remote.client.model.EntityAttributeScopeRepresentation;

/**
 * EntityVariableScopeRepresentation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-26T11:35:07.343+01:00")
public class EntityVariableScopeRepresentation {
  @SerializedName("attributes")
  private List<EntityAttributeScopeRepresentation> attributes = null;

  @SerializedName("entityName")
  private String entityName = null;

  @SerializedName("mappedDataModel")
  private Long mappedDataModel = null;

  @SerializedName("mappedVariableName")
  private String mappedVariableName = null;

  public EntityVariableScopeRepresentation attributes(List<EntityAttributeScopeRepresentation> attributes) {
    this.attributes = attributes;
    return this;
  }

  public EntityVariableScopeRepresentation addAttributesItem(EntityAttributeScopeRepresentation attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<EntityAttributeScopeRepresentation>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @ApiModelProperty(value = "")
  public List<EntityAttributeScopeRepresentation> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<EntityAttributeScopeRepresentation> attributes) {
    this.attributes = attributes;
  }

  public EntityVariableScopeRepresentation entityName(String entityName) {
    this.entityName = entityName;
    return this;
  }

   /**
   * Get entityName
   * @return entityName
  **/
  @ApiModelProperty(value = "")
  public String getEntityName() {
    return entityName;
  }

  public void setEntityName(String entityName) {
    this.entityName = entityName;
  }

  public EntityVariableScopeRepresentation mappedDataModel(Long mappedDataModel) {
    this.mappedDataModel = mappedDataModel;
    return this;
  }

   /**
   * Get mappedDataModel
   * @return mappedDataModel
  **/
  @ApiModelProperty(value = "")
  public Long getMappedDataModel() {
    return mappedDataModel;
  }

  public void setMappedDataModel(Long mappedDataModel) {
    this.mappedDataModel = mappedDataModel;
  }

  public EntityVariableScopeRepresentation mappedVariableName(String mappedVariableName) {
    this.mappedVariableName = mappedVariableName;
    return this;
  }

   /**
   * Get mappedVariableName
   * @return mappedVariableName
  **/
  @ApiModelProperty(value = "")
  public String getMappedVariableName() {
    return mappedVariableName;
  }

  public void setMappedVariableName(String mappedVariableName) {
    this.mappedVariableName = mappedVariableName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityVariableScopeRepresentation entityVariableScopeRepresentation = (EntityVariableScopeRepresentation) o;
    return Objects.equals(this.attributes, entityVariableScopeRepresentation.attributes) &&
        Objects.equals(this.entityName, entityVariableScopeRepresentation.entityName) &&
        Objects.equals(this.mappedDataModel, entityVariableScopeRepresentation.mappedDataModel) &&
        Objects.equals(this.mappedVariableName, entityVariableScopeRepresentation.mappedVariableName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, entityName, mappedDataModel, mappedVariableName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityVariableScopeRepresentation {\n");
    
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    entityName: ").append(toIndentedString(entityName)).append("\n");
    sb.append("    mappedDataModel: ").append(toIndentedString(mappedDataModel)).append("\n");
    sb.append("    mappedVariableName: ").append(toIndentedString(mappedVariableName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

